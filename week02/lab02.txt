== Question 1 == 
a) What word is on line 2000 

Pipeline: cat -n mywords | egrep $' 2000\t' | cut -f2
Answer: Algonquian

b) the first word in the dictionary file ending with 's

Pipeline: egrep 's'$ | head -1
Answer: A's

c) the last word in the dictionary that contains the substring ooz ?

Pipeline: egrep 'ooz' | tail -1
Answer: zoozoos

d) What are the first the last and the longest?

Pipeline: egrep -i '.*a.*e.*i.*o.*u.*' mywords | head -1
Answer: abstemious

Pipeline: egrep -i '.*a.*e.*i.*o.*u.*' mywords | tail -1
Answer: valerianaceous

Pipeline: declare myvar=$(egrep -i '.*a.*e.*i.*o.*u.*' mywords | wc -L); egrep .{$myvar} mywords | egrep -i '.*a.*e.*i.*o.*u.*'
Answer: supercalifragilisticexpialidocious


e) How many are there?

Pipeline: egrep '.*a.*e.*i.*o.*u.*' mywords | wc -l
Answer: 53

f) Modified regex (optional)?

Pipeline: egrep -i ^'[^aeiou]*a[^aeiou]*e[^aeiou]*i[^aeiou]*o[^aeiou]*u[^aeiou]*'$ mywords  
Answer: 
abstemious
abstemiously
abstentious
arsenious
caesious
facetious
facetiously

== Question 2 == 
a) How many total words does the file contain?  

Command: wc -w mywords
Answer: 390582

b) How many total words, excluding those ending in "'s", are there in the dictionary?

Pipeline: grep -v "'s" mywords | wc -w
Answer: 299840

c) How could you use cat -n and grep to find out which word is on line 100000? 

Pipeline: cat -n mywords | egrep $' 100000\t' | cut -f2
Answer: adviser

d) How could you use cat -n and grep to print the 700th line, and no other lines?

Pipeline: cat -n mywords | egrep $' 700\t' | cut -f2
Answer: Adirondack

e) How do you use head and tail to find out what word is on line 200000 

Pipeline: head -200000 mywords | tail -1
Answer: geodynamics's

== Question 3 == 
a) which words contain the characters "lmn" consecutively?

Pipeline: egrep lmn mywords
Answer: 
Selmner
Selmner's
almner
almners
calmness
calmness's
calmnesses

b) how many words contain "zz", but do not end in apostrophe-s ('s)?

Pipeline: egrep "zz" mywords | egrep "'s"$ -v | wc -l
Answer: 628

c) how many words contain four consecutive vowels?

Pipeline: egrep -i '(a|e|i|o|u){4}' mywords | wc -l
Answer: 207

d) how many words have a 9-letter dictionary word embedded inside them.

Pipeline: fgrep -fi words9 mywords | wc -l
Answer: 87408


== Question 4 == 

a) Write a grep command that will print all the lines in the file where the electorate begins with W.

Pipeline: egrep 'Member for W' parliament.txt 
Answer: 
The Hon Tony Abbott, Member for Warringah  
Mr Scott Buchholz, Member for Wright  
The Hon Tony Burke, Member for Watson
Mr Nick Champion, Member for Wakefield  
Mr Laurie Ferguson, Member for Werriwa  
Mr Dan Tehan, Member for Wannon  
Mr Kelvin Thomson, Member for Wills  
The Hon Warren Truss, Member for Wide Bay
The Hon Malcolm Turnbull, Member for Wentworth 

b) Write a grep command that will list all the lines in the file where the MP's first name is Andrew. 

Pipeline: egrep 'Andrew [a-zA-Z]+,' parliament.txt
Answer:
Mr Andrew Laming, Member for Bowman  
Dr Andrew Leigh, Member for Fraser  
The Hon Andrew Robb, Member for Goldstein  
Dr Andrew Southcott, Member for Boothby  
Mr Andrew Wilkie, Member for Denison

c) Write a grep command that will print all the lines in the file with three consecutive vowels.

Pipeline: egrep '(a|e|i|o|u){3}' parliament.txt
Answer: Mrs Louise Markus, Member for Macquarie

d) Write a grep command that will print all the lines in the file where the MP's surname (last name) ends in the letter 'y'.

Pipeline: egrep 'y, ' parliament.txt
Answer:
The Hon David Bradbury, Member for Lindsay  
Mr Michael Danby, Member for Melbourne Ports
The Hon Gary Gray, Member for Brand
The Hon Joe Hockey, Member for North Sydney  
Mr Craig Kelly, Member for Hughes  
The Hon Dr Mike Kelly, Member for Eden-Monaro
The Hon Sussan Ley, Member for Farrer  
The Hon John Murphy, Member for Reid
Mr Rowan Ramsey, Member for Grey  
Mr Wyatt Roy, Member for Longman  
The Hon Alexander Somlyay, Member for Fairfax  

e) Write a grep command that will print all the lines in the file where the electorate ends in the letter 'y'.

Pipeline: egrep 'y *'$ parliament.txt
Answer:
The Hon Bruce Billson, Member for Dunkley  
The Hon David Bradbury, Member for Lindsay  
The Hon Joe Hockey, Member for North Sydney  
Mr Ed Husic, Member for Chifley  
Dr Dennis Jensen, Member for Tangney  
Mr Stephen Jones, Member for Throsby  
The Hon Bob Katter, Member for Kennedy  
The Hon Tanya Plibersek, Member for Sydney  
Mr Rowan Ramsey, Member for Grey  
Mr Bernie Ripoll, Member for Oxley  
Ms Michelle Rowland, Member for Greenway
The Hon Tony Smith, Member for Casey  
Dr Andrew Southcott, Member for Boothby  
The Hon Dr Sharman Stone, Member for Murray  
The Hon Wayne Swan, Member for Lilley
The Hon Warren Truss, Member for Wide Bay

f) Write a grep command to print all the lines in the file where there is a word in the MP's name or the electorate name ending in ng.

Pipeline: egrep  '[A-Za-z]*ng[A-Za-z]*, |ng.*$' parliament.txt
Answer: 
The Hon Tony Abbott, Member for Warringah  
Mr John Alexander, Member for Bennelong  
Ms Sharon Bird, Member for Cunningham
Mr Darren Cheeseman, Member for Corangamite  
Mr Josh Frydenberg, Member for Kooyong  
The Hon Peter Garrett, Member for Kingsford Smith
Dr Dennis Jensen, Member for Tangney  
Mr Michael Keenan, Member for Stirling  
The Hon Catherine King, Member for Ballarat  
Mr Andrew Laming, Member for Bowman  
Mr Don Randall, Member for Canning
Ms Amanda Rishworth, Member for Kingston  
Mr Wyatt Roy, Member for Longman  
The Hon Bill Shorten, Member for Maribyrnong  
The Hon Warren Snowdon, Member for Lingiari  
Mr Tony Windsor, Member for New England  

g) Write a grep command that will print all the lines in the file where the MP's surname (last name) both begins and ends with a vowel. 

Pipeline: egrep ' (A|E|I|O|U)[A-Za-z]*(a|e|i|o|u), ' parliament.txt
Answer: The Hon Anthony Albanese, Member for Grayndler  

h) Write a grep command that will print all the lines in the file where the electorate name contains multiple words (separated by spaces or hyphens). 

Pipeline: egrep ' for [A-Za-z]+( |-)[A-Za-z]+ *$' parliament.txt
Answer:
The Hon Mark Butler, Member for Port Adelaide  
Mr Michael Danby, Member for Melbourne Ports
The Hon Peter Garrett, Member for Kingsford Smith
The Hon Joe Hockey, Member for North Sydney  
The Hon Dr Mike Kelly, Member for Eden-Monaro
Ms Laura Smyth, Member for La Trobe
The Hon Warren Truss, Member for Wide Bay
Mr Tony Windsor, Member for New England  

== Question 5 == 

Write a shell pipline which prints the 2nd most common MP first name. 

Pipeline: egrep -o ' [A-Z][a-z]* [A-Z][a-z]*,' parliament.txt | sed s/,// | cut -f2 -d' ' | sort | uniq -c | sort -r | head -2 | tail -1 | egrep -o [A-Z][a-z]*
Answer: Andrew

== Question 6 ==

a) How many total classes are there?

Pipeline: wc -l < classes.txt
Answer: 316

b) How many different courses have classes?

Pipeline: cut -f1 classes.txt | sort | uniq | wc -l
Answer: 42


c) Write a pipeline which will print the course with the most classes?

Pipeline: cut -f1 classes.txt | sort | uniq -c | sort -r | head -1 | egrep -o '[A-Z]{4}[0-9]{4}'
Answer: ENGG1811

d) Give a command line that prints the most frequently-used tut room? 

Pipeline: cut -f5 classes.txt | sort | uniq -c | sort -r | head -1 | cut -c9-
Answer: OrganPhysU

e) Give a command line that prints the most popular time-of-day for tutes? 

Pipeline: cut -f4 classes.txt | cut -f2 -d' ' | sort | uniq -c | sort -r | head -1 | cut -c9-
Answer: 16-18
Note: 16-18 has 29 classes, as does 14-16. They are equal first in popularity.

f) Which COMP courses run the most simultaneous classes of the same type? 

Pipeline: declare most=$(fgrep -f courses.txt classes.txt | cut -f4,1,3 | sort | uniq -c | sort -r | head -1 | egrep -o '[0-9]+ '); fgrep -f courses.txt classes.txt | cut -f4,1,3 | sort | uniq -c | sort -r | egrep ' '$most | egrep -o [A-Z].*
Answer: 
COMP9814	LAB	Wed 16-18
COMP9414	LAB	Wed 16-18

g) Write a pipeline that prints list of the course names (only) of COMP courses that run simultaneous classes of the same type?

Pipeline: fgrep -f courses.txt classes.txt | cut -f4,1,3 | sort | uniq -c | sort -r | egrep $'[2-9][0-9]* ' | egrep -o 'COMP[0-9]{4}' | uniq
Answer:
COMP9814
COMP9414
COMP9332
COMP9318
COMP1917
COMP1911
COMP9333
COMP9332
COMP9321
COMP9318
COMP4511
COMP3411
COMP3141
COMP2911
COMP1927
COMP1917
COMP1911
COMP0011

== Question 7 (Challenge) ==

a) Match any line containing at least one A and at least one B.

Regexp: '(A.*B|B.*A)'

b) Match any line any line containing only the characters A and B such that all pairs of adjacent As occur before any pairs of adjacent Bs

Regexp: '^A$|BA$|AB$|(AA[AB]*BB)$' (or if flags can be used) -v 'BB[AB]*AA'

c) Match any line containing  only the characters A and B such that all number of A's is divisible by 4.

Regexp: '^(B*AB*AB*AB*AB*)*$'

d) Match any line containing n As followed by n Bs and no other characters..

Regexp/script: for ((n=1; n<=$(wc -c < chtest04); n++));do egrep ^A{$n}B{$n}$ chtest04; done


